{"ast":null,"code":"var _jsxFileName = \"/Users/konraddroeske/Desktop/HackerYouBootcamp/zoltarSpeaks/src/Components/Maze.js\";\nimport React, { Component } from 'react';\nimport WinModal from './WinModal';\n\nclass Maze extends Component {\n  constructor(props) {\n    super(props);\n\n    this.updateCoinLocation = (axis, vector) => {\n      // const target = this.state.playerLocation;\n      target[axis] = this.state.playerLocation[axis] + vector; // this is where it's counting\n\n      console.log(\"axis\", target[axis]);\n      console.log(\"vector\", vector);\n      console.log(\"axis + vector\", target[axis] + vector);\n\n      if (target[axis] + vector < 0 || target[axis] + vector > this.state.mazeMap.length) {\n        console.log('out of bounds');\n        target[axis] = target[axis] + vector * -1;\n      } else {\n        console.log('in bounds');\n        this.checkTargetCell(target, axis, vector);\n      }\n    };\n\n    this.checkTargetCell = (target, axis, vector) => {\n      const targetCellValue = this.state.mazeMap[target.y][target.x];\n      console.log('check target cell,', target.x, target.y);\n      console.log('targetCellValue', targetCellValue);\n\n      switch (targetCellValue) {\n        case 1:\n          {\n            console.log('wall!!!!!');\n            console.log('player location when wall is hit', this.state.playerLocation);\n            console.log('before target', target);\n            target[axis] = target[axis] + vector * -1;\n            console.log('after target', target); // const newPlayerLocation = this.state.playerLocation;\n            // newPlayerLocation[axis] += vector * -1;\n            // this.setState({\n            // \tplayerLocation: newPlayerLocation\n            // });\n\n            break;\n          }\n\n        case -2:\n          {\n            this.moveCoin(target);\n            alert('your wish is granted!');\n            break;\n          }\n\n        case 0:\n          {\n            this.moveCoin(target);\n            break;\n          }\n      }\n    };\n\n    this.moveCoin = target => {\n      // console.log('move coin', target);\n      this.setState({\n        playerLocation: target\n      }, () => {\n        // console.log('player location changed');\n        console.log(this.state.playerLocation);\n        document.querySelector('.player').style.transform = \"translate(\".concat(target.x, \"00%,\").concat(target.y, \"00%)\");\n      });\n    };\n\n    this.state = {\n      mazeMap: [[-1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1], [1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1], [1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1], [1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1], [1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1], [1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1], [1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1], [1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, -2]],\n      playerLocation: {\n        x: 0,\n        y: 0\n      },\n      showModal: true\n    };\n  } // on click/keydown, get target location x, y, store in target state\n  // check if target cell is within boundary:\n  // if yes, check type of target cell\n  // if path, move(), updates this.state.playerLocation\n  // if wall, null\n  // if exit, Link to modal box\n  // if trap, trap()\n  // if no, null\n  //pass in X or Y axis, and +1 or -1 movement\n\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, \"Maze\"), React.createElement(\"div\", {\n      className: \"mazeLayer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, this.state.mazeMap.map((row, Y) => {\n      return row.map((cell, X) => {\n        if (cell !== 1) {\n          return React.createElement(\"div\", {\n            className: \"mapCell path\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 129\n            },\n            __self: this\n          }, \"path\");\n        } else {\n          return React.createElement(\"div\", {\n            className: \"mapCell wall\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 131\n            },\n            __self: this\n          }, \"wall\");\n        }\n      });\n    }), React.createElement(\"div\", {\n      className: \"movingLayer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, this.state.mazeMap.map((row, Y) => {\n      return row.map((cell, X) => {\n        if (cell === -1) {\n          // starting location\n          return React.createElement(\"div\", {\n            className: \"movingCell player\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 142\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"avatar\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 143\n            },\n            __self: this\n          }));\n        } else {\n          return React.createElement(\"div\", {\n            className: \"movingCell\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 147\n            },\n            __self: this\n          }, \"O\");\n        }\n      });\n    }))), React.createElement(\"button\", {\n      onClick: () => {\n        this.updateCoinLocation('x', -1);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, \"Left\"), React.createElement(\"button\", {\n      onClick: () => {\n        this.updateCoinLocation('y', -1);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, \"Up\"), React.createElement(\"button\", {\n      onClick: () => {\n        this.updateCoinLocation('x', 1);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, \"Right\"), React.createElement(\"button\", {\n      onClick: () => {\n        this.updateCoinLocation('y', 1);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, \"Down\"), this.state.showModal ? React.createElement(WinModal, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }) : null);\n  }\n\n}\n\nexport default Maze;","map":{"version":3,"sources":["/Users/konraddroeske/Desktop/HackerYouBootcamp/zoltarSpeaks/src/Components/Maze.js"],"names":["React","Component","WinModal","Maze","constructor","props","updateCoinLocation","axis","vector","target","state","playerLocation","console","log","mazeMap","length","checkTargetCell","targetCellValue","y","x","moveCoin","alert","setState","document","querySelector","style","transform","showModal","render","map","row","Y","cell","X"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport WinModal from './WinModal';\n\nclass Maze extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tmazeMap: [\n\t\t\t\t[-1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n\t\t\t\t[0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1],\n\t\t\t\t[1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1],\n\t\t\t\t[1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1],\n\t\t\t\t[1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1],\n\t\t\t\t[1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1],\n\t\t\t\t[1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1],\n\t\t\t\t[1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1],\n\t\t\t\t[1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1],\n\t\t\t\t[1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1],\n\t\t\t\t[1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1],\n\t\t\t\t[1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, -2]\n\t\t\t],\n\t\t\tplayerLocation: {\n\t\t\t\tx: 0,\n\t\t\t\ty: 0\n\t\t\t},\n\t\t\tshowModal: true\n\t\t};\n\t}\n\n\t// on click/keydown, get target location x, y, store in target state\n\n\t// check if target cell is within boundary:\n\n\t// if yes, check type of target cell\n\n\t// if path, move(), updates this.state.playerLocation\n\n\t// if wall, null\n\n\t// if exit, Link to modal box\n\n\t// if trap, trap()\n\n\t// if no, null\n\n\t//pass in X or Y axis, and +1 or -1 movement\n\tupdateCoinLocation = (axis, vector) => {\n\n\t\t// const target = this.state.playerLocation;\n\n\t\ttarget[axis] = this.state.playerLocation[axis] + vector;\n\t\t// this is where it's counting\n\n\t\tconsole.log(\"axis\", target[axis]);\n\t\tconsole.log(\"vector\", vector);\n\t\tconsole.log(\"axis + vector\", target[axis] + vector);\n\n\t\tif (\n\t\t\ttarget[axis] + vector < 0 ||\n\t\t\ttarget[axis] + vector > this.state.mazeMap.length\n\t\t) {\n\t\t\tconsole.log('out of bounds');\n\t\t\ttarget[axis] = target[axis] + vector*-1;\n\t\t} else {\n\t\t\tconsole.log('in bounds');\n\t\t\tthis.checkTargetCell(target, axis, vector);\n\t\t}\n\t};\n\n\tcheckTargetCell = (target, axis, vector) => {\n\t\tconst targetCellValue = this.state.mazeMap[target.y][target.x];\n\n\t\tconsole.log('check target cell,', target.x, target.y);\n\t\tconsole.log('targetCellValue', targetCellValue);\n\t\tswitch (targetCellValue) {\n\t\t\tcase 1: {\n\t\t\t\tconsole.log('wall!!!!!');\n\t\t\t\tconsole.log(\n\t\t\t\t\t'player location when wall is hit',\n\t\t\t\t\tthis.state.playerLocation\n\t\t\t\t);\n\n\t\t\t\tconsole.log('before target', target);\n\t\t\t\ttarget[axis] = target[axis] + vector * -1;\n\t\t\t\tconsole.log('after target', target);\n\n\t\t\t\t// const newPlayerLocation = this.state.playerLocation;\n\n\t\t\t\t// newPlayerLocation[axis] += vector * -1;\n\n\t\t\t\t// this.setState({\n\t\t\t\t// \tplayerLocation: newPlayerLocation\n\t\t\t\t// });\n\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase -2: {\n\t\t\t\tthis.moveCoin(target);\n\t\t\t\talert('your wish is granted!');\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase 0: {\n\t\t\t\tthis.moveCoin(target);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t};\n\n\tmoveCoin = target => {\n\t\t// console.log('move coin', target);\n\n\t\tthis.setState({ playerLocation: target }, () => {\n\t\t\t// console.log('player location changed');\n\t\t\tconsole.log(this.state.playerLocation);\n\t\t\tdocument.querySelector(\n\t\t\t\t'.player'\n\t\t\t).style.transform = `translate(${target.x}00%,${target.y}00%)`;\n\t\t});\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<h1>Maze</h1>\n\t\t\t\t<div className='mazeLayer'>\n\t\t\t\t\t{this.state.mazeMap.map((row, Y) => {\n\t\t\t\t\t\treturn row.map((cell, X) => {\n\t\t\t\t\t\t\tif (cell !== 1) {\n\t\t\t\t\t\t\t\treturn <div className='mapCell path'>path</div>;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\treturn <div className='mapCell wall'>wall</div>;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t})}\n\n\t\t\t\t\t<div className='movingLayer'>\n\t\t\t\t\t\t{this.state.mazeMap.map((row, Y) => {\n\t\t\t\t\t\t\treturn row.map((cell, X) => {\n\t\t\t\t\t\t\t\tif (cell === -1) {\n\t\t\t\t\t\t\t\t\t// starting location\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<div className='movingCell player'>\n\t\t\t\t\t\t\t\t\t\t\t<div className='avatar'></div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\treturn <div className='movingCell'>O</div>;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t})}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<button\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tthis.updateCoinLocation('x', -1);\n\t\t\t\t\t}}>\n\t\t\t\t\tLeft\n\t\t\t\t</button>\n\t\t\t\t<button\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tthis.updateCoinLocation('y', -1);\n\t\t\t\t\t}}>\n\t\t\t\t\tUp\n\t\t\t\t</button>\n\t\t\t\t<button\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tthis.updateCoinLocation('x', 1);\n\t\t\t\t\t}}>\n\t\t\t\t\tRight\n\t\t\t\t</button>\n\t\t\t\t<button\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tthis.updateCoinLocation('y', 1);\n\t\t\t\t\t}}>\n\t\t\t\t\tDown\n\t\t\t\t</button>\n\n\t\t\t\t{this.state.showModal ? <WinModal /> : null}\n\t\t\t\t{/* modal appears if victory condition is set to true*/}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Maze;\n"]},"metadata":{},"sourceType":"module"}